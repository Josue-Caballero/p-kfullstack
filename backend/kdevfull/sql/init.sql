
-- DROP TABLE public.users;

CREATE TABLE public.users (
	id int8 GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	created_at timestamp(6) NULL,
	created_by varchar(255) NULL,
	email varchar(255) UNIQUE NOT NULL,
	"password" varchar(255) NOT NULL,
	"role" varchar(255) NULL,
	state varchar(255) NOT NULL,
	updated_by varchar(255) NULL,
	username varchar(255) UNIQUE NOT NULL,
	CONSTRAINT users_role_check CHECK (((role)::text = ANY ((ARRAY['ADMIN'::character varying, 'USER'::character varying])::text[]))),
	CONSTRAINT users_state_check CHECK (((state)::text = ANY ((ARRAY['ACTIVE'::character varying, 'INACTIVE'::character varying, 'DELETED'::character varying])::text[])))
);

-- DROP TABLE public.projects;

CREATE TABLE public.projects (
	id int8 GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	created_at timestamp(6) NULL,
	created_by varchar(255) NULL,
	description varchar(255) NULL,
	"name" varchar(255) NOT NULL,
	state varchar(255) NOT NULL,
	updated_by varchar(255) NULL,
	owner_id int8 NULL,
	CONSTRAINT projects_state_check CHECK (((state)::text = ANY ((ARRAY['ACTIVE'::character varying, 'INACTIVE'::character varying, 'DELETED'::character varying])::text[]))),
	CONSTRAINT FK_USERID_PROJECT FOREIGN KEY (owner_id) REFERENCES public.users(id)
);


-- DROP TABLE public.tasks;

CREATE TABLE public.tasks (
	id int8 GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	created_at timestamp(6) NULL,
	created_by varchar(255) NULL,
	description varchar(255) NULL,
	due_date date NULL,
	state varchar(255) NOT NULL,
	status varchar(255) NULL,
	title varchar(255) NOT NULL,
	updated_by varchar(255) NULL,
	assigned_to_id int8 NULL,
	project_id int8 NULL,
	CONSTRAINT tasks_state_check CHECK (((state)::text = ANY ((ARRAY['ACTIVE'::character varying, 'INACTIVE'::character varying, 'DELETED'::character varying])::text[]))),
	CONSTRAINT tasks_status_check CHECK (((status)::text = ANY ((ARRAY['PENDING'::character varying, 'IN_PROGRESS'::character varying, 'DONE'::character varying])::text[]))),
	CONSTRAINT FK_USERID_TASK FOREIGN KEY (assigned_to_id) REFERENCES public.users(id),
	CONSTRAINT FK_PROJECTID_TASK FOREIGN KEY (project_id) REFERENCES public.projects(id)
);

INSERT INTO users (username, email, password, role, created_at, created_by, state)
VALUES (
  'admin',
  'admin@kruger.com',
  -- Este password debe estar ya encriptado si usas Spring Security es 12345
  '$2a$10$6E2E4diA8fiHWKWKZr3JQ.lbURDiVBaGlse96n6U21fH2CXyrsa4W',
  'ADMIN',
  now(),
  'admin',
  'ACTIVE'
);

INSERT INTO users (username, email, password, role, created_at, created_by, state)
VALUES (
  'user',
  'user@kruger.com',
  -- Este password debe estar ya encriptado si usas Spring Security es 12345
  '$2a$10$6E2E4diA8fiHWKWKZr3JQ.lbURDiVBaGlse96n6U21fH2CXyrsa4W',
  'USER',
  now(),
  'admin',
  'ACTIVE'
);

INSERT INTO public.projects (created_at,created_by,description,"name",state,updated_by,owner_id) 
VALUES ('2025-07-23 18:13:05.868555','user','Tareas de sprint backlog','Nuevo proyecto','ACTIVE','user',2),
	('2025-07-23 21:40:01.304465','admin','string','string','ACTIVE',NULL,1);

INSERT INTO public.tasks (created_at,created_by,description,due_date,state,status,title,updated_by,assigned_to_id,project_id) 
VALUES ('2025-07-23 21:11:23.623154','admin','Define and model MER','2025-07-24','ACTIVE','PENDING','Database diagram',NULL,2,1),
	 ('2025-07-23 21:15:58.240381','user','Define and model MER','2025-07-24','ACTIVE','PENDING','Database diagram',NULL,2,1),
	 ('2025-07-23 21:40:40.312645','admin','Nueva tarea','2025-07-24','DELETED','PENDING','Actualización rápida','admin',2,2);
